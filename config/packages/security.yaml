security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider: # Имя провайдера
            entity:
                class: App\Entity\User # Полный путь к вашей сущности User
                property: email        # Поле в сущности, используемое для идентификации

    firewalls:
        main:
            stateless: false
            lazy: true
            provider: app_user_provider # Указание провайдера
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: /users
                username_parameter: _email # Указываем, что идентификатор — это _email
                password_parameter: _password
            logout:
                path: app_logout
                target: app_login
            custom_authenticators:
                - App\Security\UserAuthenticator



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/templates, roles: [ ROLE_USER, ROLE_ADMIN ] }
        - { path: ^/question, roles: [ ROLE_USER, ROLE_ADMIN ] }
        - { path: ^/form, roles: [ ROLE_USER, ROLE_ADMIN ] }
        - { path: ^/users, roles: ROLE_ADMIN }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
